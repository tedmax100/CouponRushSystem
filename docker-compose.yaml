version: '3.9'

networks:
  coupon:

services:
  db:
    image: postgres:15.6
    container_name: db
    restart: always
    volumes:
      - ./build/db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    environment:
       POSTGRES_PASSWORD: qwer1234
       POSTGRES_USER: userabc
       POSTGRES_DB: coupon
       SCHEMA: public
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userabc"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - coupon

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - coupon

  message_queue:
    image: rabbitmq:3.13-management
    container_name: message_queue
    environment:
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=qwer1234
      - RABBITMQ_ERLANG_COOKIE=tonfura
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - coupon

  app:
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
    ports:
      - 8088:8088
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      message_queue:
        condition: service_started
    networks:
      - coupon