/*
 * Swagger Coupon Rush Server API
 * This is the Coupon Rush ServerOpenAPI.
 *
 * OpenAPI spec version: 1.0
 * Contact: tedmax100@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.6.0-SNAPSHOT
 */

import http from "k6/http";
import { group, check, sleep } from "k6";

export let options = {
  thresholds: {
    http_req_duration: [
      {
        threshold: "p(95)<50",
      },
      {
        threshold: "max<100",
        abortOnFail: true,
      },
    ],
  },
};

var BASE_URL = __ENV.BASE_URL || "http://localhost:8088";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

var ACTIVE_ID = parseInt(__ENV.ACTIVE_ID) || 1;

// user data
const users = new SharedArray("user data", function () {
  const data = JSON.parse(open("./user.json"));
  return data;
});

export default function () {
  group("/coupons/purchase", () => {
    // Request No. 1:
    {
      let url = BASE_URL + `/coupons/purchase`;
      // TODO: edit the parameters of the request body.
      let body = { activeId: ACTIVE_ID, userId: randomChoice(users) };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/coupons/reserve", () => {
    // Request No. 1:
    {
      let url = BASE_URL + `/coupons/reserve`;
      // TODO: edit the parameters of the request body.
      let body = { activeId: ACTIVE_ID, userId: randomChoice(users) };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });
}

function randomChoice(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}
